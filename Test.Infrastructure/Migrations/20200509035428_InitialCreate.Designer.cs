// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Infrastructure;

namespace Test.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200509035428_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Test.Domain.Monitoring", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acceleration")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<double>("Time")
                        .HasColumnType("float");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<double>("X_Coordinate")
                        .HasColumnType("float");

                    b.Property<double>("Y_Coordinate")
                        .HasColumnType("float");

                    b.HasKey("ImageId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Monitoring","dbo");

                    b.HasData(
                        new
                        {
                            ImageId = 35075,
                            Acceleration = 5.5038479999999996,
                            Latitude = -27.559899999999999,
                            Longitude = 153.0813,
                            Speed = 8.4702029999999997,
                            Time = 0.20000000000000001,
                            VehicleId = 13403,
                            VehicleType = 1,
                            X_Coordinate = 536.0326,
                            Y_Coordinate = 537.37570000000005
                        },
                        new
                        {
                            ImageId = 35076,
                            Acceleration = 5.416137,
                            Latitude = -27.559899999999999,
                            Longitude = 153.0813,
                            Speed = 9.0118170000000006,
                            Time = 0.29999999999999999,
                            VehicleId = 13403,
                            VehicleType = 1,
                            X_Coordinate = 570.40290000000005,
                            Y_Coordinate = 541.9049
                        },
                        new
                        {
                            ImageId = 35077,
                            Acceleration = 5.0914289999999998,
                            Latitude = -27.559899999999999,
                            Longitude = 153.0813,
                            Speed = 9.5209600000000005,
                            Time = 0.40000000000000002,
                            VehicleId = 13403,
                            VehicleType = 1,
                            X_Coordinate = 606.14739999999995,
                            Y_Coordinate = 547.14059999999995
                        },
                        new
                        {
                            ImageId = 35078,
                            Acceleration = 4.6128299999999998,
                            Latitude = -27.559899999999999,
                            Longitude = 153.0813,
                            Speed = 9.9822430000000004,
                            Time = 0.5,
                            VehicleId = 13403,
                            VehicleType = 1,
                            X_Coordinate = 643.63009999999997,
                            Y_Coordinate = 553.03420000000006
                        },
                        new
                        {
                            ImageId = 35079,
                            Acceleration = 4.0377419999999997,
                            Latitude = -27.559899999999999,
                            Longitude = 153.0813,
                            Speed = 10.38602,
                            Time = 0.59999999999999998,
                            VehicleId = 13403,
                            VehicleType = 1,
                            X_Coordinate = 683.20780000000002,
                            Y_Coordinate = 559.53279999999995
                        });
                });

            modelBuilder.Entity("Test.Domain.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleType","dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Car"
                        });
                });

            modelBuilder.Entity("Test.Domain.Monitoring", b =>
                {
                    b.HasOne("Test.Domain.VehicleType", null)
                        .WithMany("Monitoring")
                        .HasForeignKey("VehicleTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
